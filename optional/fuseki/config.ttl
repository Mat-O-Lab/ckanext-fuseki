## Licensed under the terms of http://www.apache.org/licenses/LICENSE-2.0

PREFIX :        <#>
PREFIX fuseki:  <http://jena.apache.org/fuseki#>
PREFIX rdf:     <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs:    <http://www.w3.org/2000/01/rdf-schema#>
PREFIX ja:      <http://jena.hpl.hp.com/2005/11/Assembler#>
PREFIX tdb2:    <http://jena.apache.org/2016/tdb#>

[] rdf:type fuseki:Server ;
##   fuseki:allowedUsers    "*";
   fuseki:services (
     :service
     :service_inf
   ) .

## Service description for "/ds"
## with a TDB2 ds

:service rdf:type fuseki:Service ;
    fuseki:name "ds" ;
    fuseki:serviceQuery               "sparql" ;   # SPARQL query service
    fuseki:serviceQuery               "query" ;    # SPARQL query service (alt name)
    fuseki:serviceUpdate              "update" ;   # SPARQL update service
    fuseki:serviceUpload              "upload" ;   # Non-SPARQL upload service
    fuseki:serviceReadWriteGraphStore "data" ;     # SPARQL Graph store protocol (read and write)
    # A separate read-only graph store endpoint:
    fuseki:serviceReadGraphStore      "get" ;      # SPARQL Graph store protocol (read only) 
    fuseki:endpoint [ fuseki:operation fuseki:shacl ; fuseki:name "shacl" ] ;
    fuseki:dataset :dataset_tdb2 ;
    .

# Query service endpoint with inference model
:service_inf rdf:type fuseki:Service ;
  rdfs:label                        "TDB Query Service" ;
  fuseki:name                       "inf" ;      # http://host:port/inf
  fuseki:serviceQuery               "sparql" ;   # SPARQL query service
  fuseki:serviceQuery               "query" ;    # SPARQL query service (alt name)
  # A separate read-only graph store endpoint:
  fuseki:serviceReadGraphStore      "get" ;      # SPARQL Graph store protocol (read only)
  fuseki:dataset                    :inf_dataset ;
  .

:inf_dataset rdf:type       ja:RDFDataset ;
  ja:defaultGraph       :model_inf ;
   .

:model_inf a ja:InfModel ;
   ja:baseModel :tdbGraph ;
   ja:reasoner [ja:reasonerURL <http://jena.hpl.hp.com/2003/OWLFBRuleReasoner>];
   .


:dataset_tdb2 rdf:type  tdb2:DatasetTDB2 ;
    tdb2:location "DB2" ;
    ## Query timeout on this dataset (milliseconds)
    ja:context [ ja:cxtName "arq:queryTimeout" ;  ja:cxtValue "1000" ] ;
    ## Optional - with union default for query and update WHERE matching.
    #tdb2:unionDefaultGraph true ;
    .


:tdbGraph rdf:type tdb2:GraphTDB ;
  tdb2:dataset :dataset_tdb2 .